/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   print_f.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: shguan <marvin@42.fr>                      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/12/04 09:52:58 by shguan            #+#    #+#             */
/*   Updated: 2019/12/04 12:28:56 by shguan           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../includes/ft_printf.h"

static char	*ft_itoa_sign(intmax_t n)
{
	size_t	len;
	size_t	i;
	char	tmp[13];
	char	*ret;

	len = 0;
	if (!n)
		tmp[len++] = '0';
	while (n)
	{
		tmp[len++] = n % 10 + '0';
		n /= 10;
	}
	ret = ft_strnew(len);
	i = -1;
	while (++i < len && ret)
		ret[i] = tmp[len - 1 - i];
	if (ret)
		ret[len] = 0;
	return (ret);
}

void			float_to_int(t_tab *arg, long double num, int num_int)
{
	intmax_t n;
	int i;
	char *s;
	int count;
	int zero;

	i = ft_countnbr_signed(num_int, 10);
	count = arg->pres_nb;
	zero = arg->pres_nb + i;
	while(arg->pres_nb-- > 0)
		num *= 10;
	num *= 10;
	n = (long double)(num / 1);
	if((n % 10) >= 5)
		(n /= 10) && n++;
	else
		n /= 10;
	s = ft_itoa_sign(n);
	count = count + i - ft_strlen(s);
	while (count-- > 0)
	{
		if(i == 0)
			write(1, ".", 1);
		write(1, "0", 1) && i--;
		zero--;
	}
	while (i >= 0)
	{
		write(1, s++, 1) && i--;
		if (i == 0)
			write(1, ".", 1);
		zero--;
	}
	zero -= ft_strlen(s);
	(zero > 0) && write(1, "0", zero);
	write(1, s, ft_strlen(s));
}


int			print_lf(t_tab *arg, va_list ap)
{
	long double	num;
	int		num_int;
	char		c;

	c = (arg->flag_zero ? '0' : ' ');
	num = va_arg(ap, long double);
	num_int = (long double)(num / 1);
	(arg->pres_nb == -1) && (arg->pres_nb = 6);
	arg->width_nb -= (arg->pres_nb + 1 + ft_countnbr_signed(num_int, 10));
	arg->len += ft_countnbr_signed(num_int, 10) + 1 + arg->pres_nb;
	if (num > 0)
	{
		(arg->flag_plus) && write(1, "+", 1) && arg->len++;
		if (!arg->flag_plus && arg->flag_space)	
			write(1, " ", 1) && arg->len++;
		arg->width_nb--;	
	}
	if(arg->width_nb && !arg->flag_minus)
	{
		if (arg->flag_zero)
			write(1, "-", 1) && (num *= -1) && arg->width_nb--;
		print_pad(arg->width_nb, arg, c);	
	}
	
	
	if (arg->pres && !arg->flag_zero)
		 write(1, "-", 1) && (num *= -1) && num_int--;
	float_to_int(arg, num, num_int);
	if (arg->flag_minus && arg->width_nb)
		print_pad(arg->width_nb, arg, c);
	return (arg->len);
}

int			print_f(t_tab *arg, va_list ap)
{
	long double	num;
	int			num_int;
	char		c;

	c = (arg->flag_zero ? '0' : ' ');
	num = va_arg(ap, double);
	(arg->pres_nb == -1) && (arg->pres_nb = 6);
	//num = ft_num(arg, num);
	num_int = (long double)(num / 1);
	arg->width_nb -= (arg->pres_nb + 1 + ft_countnbr_signed(num_int, 10));
	arg->len += ft_countnbr_signed(num_int, 10) + 1 + arg->pres_nb;
	if (!arg->flag_minus && arg->width_nb)
		print_pad(arg->width_nb, arg, c);
	float_to_int(arg, num, num_int);
	if (arg->flag_minus && arg->width_nb)
		print_pad(arg->width_nb, arg, c);
	return (arg->len);
}
