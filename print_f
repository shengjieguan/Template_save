int		print_d(t_tab *arg, va_list ap)
{
	int			arg_len;
	intmax_t	num;
	char		c;

	c = (arg->flag_zero ? '0' : ' ');
	(arg->flag_zero && arg->pres) && (c = ' ');
	num = num_intmax_t(arg, ap);
	if (!(num >= -9223372036854775807 && num <= 9223372036854775807))
		return (arg->len);
	(arg_len = ft_countnbr_signed(num, 10)) && (arg->len += arg_len);
	arg->width_nb -= (arg->pres_nb - arg_len > 0 ? arg->pres_nb : arg_len);
	
	//if ((arg->flag_plus && !arg->pres)|| (arg->flag_space && arg->pres))
	//if ((arg->flag_plus || (arg->flag_space && arg->pres)) && num >= 0)
	if ((arg->flag_plus || (arg->flag_space)) && num >= 0)
		arg->width_nb--;

	arg->pres_nb -= (arg->pres_nb - arg_len > 0 ? arg_len : arg->pres_nb);
	//if (num < 0 && arg->pres_nb >= 0)
	//		arg->pres_nb++; arg->width_nb--;
	//arg->width_nb -= (arg->pres_nb - arg_len > 0);
	//printf("%d", arg->width_nb);
	
	(arg->pres_nb < 1 && num == 0 && arg->pres) && arg->width_nb++;
			

	if (num >= 0)
	{
		if (arg->flag_plus && (arg->flag_minus || arg->flag_zero))
			write(1, "+", 1) && arg->len++;
		if (!arg->flag_plus && arg->flag_space)
			write(1, " ", 1) && arg->len++;
	}

	if(num < 0 && !arg->pres && arg->width_nb > 0 && arg->flag_zero)
		write(1, "-", 1) && (num *= -1);
	if(!arg->flag_minus)
	{
		print_pad(arg->width_nb, arg, c);
	}
	(arg->flag_plus && num >= 0 && !arg->flag_zero && !arg->flag_minus) && write(1, "+", 1) && arg->len++;
	if(arg->pres_nb > 0)
	{
		(num < 0) && write(1, "-", 1) && (num *= -1);
		print_pad(arg->pres_nb, arg, '0');
	}
	if (arg->pres && arg->pres_nb < 1 && !num)
		write(1, &c, 0) && arg->len--;
	else
		ft_putnbr_signed(num, 10);
	if(arg->flag_minus)
	{
		print_pad(arg->width_nb, arg, c);
	}
	return (arg->len);
}
